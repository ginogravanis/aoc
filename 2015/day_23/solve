#!/usr/bin/env python

import sys as _sys


def _eval(cmd: tuple[str, ...], machine: dict[str, int]) -> int:
    offset = 1
    if cmd[0] == 'hlf':
        machine[cmd[1]] //= 2
    elif cmd[0] == 'tpl':
        machine[cmd[1]] *= 3
    elif cmd[0] == 'inc':
        machine[cmd[1]] += 1
    elif cmd[0] == 'jmp':
        offset = int(cmd[1])
    elif cmd[0] == 'jie':
        if machine[cmd[1]] % 2 == 0:
            offset = int(cmd[2])
    elif cmd[0] == 'jio':
        if machine[cmd[1]] == 1:
            offset = int(cmd[2])
    else:
        assert False

    machine['ip'] += offset


def _run(program: list[tuple], machine: dict[str, int]) -> dict:
    while 0 <= machine['ip'] < len(program):
        _eval(program[machine['ip']], machine)


def _parse(line: str) -> tuple[str, ...]:
    return tuple(word.strip(',') for word in line.strip().split(' '))


def solve1(filename: str) -> int:
    machine = {'ip': 0, 'a': 0, 'b': 0}
    with open(filename) as file:
        program = [_parse(line) for line in file]

    _run(program, machine)
    return machine.get('b')


def solve2(filename: str) -> int:
    machine = {'ip': 0, 'a': 1, 'b': 0}
    with open(filename) as file:
        program = [_parse(line) for line in file]

    _run(program, machine)
    return machine.get('b')


def usage():
    print(f"usage: {_sys.argv[0]} 1|2 FILE")


def main():
    if len(_sys.argv) != 3:
        return usage()

    part = _sys.argv[1]
    filename = _sys.argv[2]

    if part == '1':
        print(solve1(filename))
    elif part == '2':
        print(solve2(filename))
    else:
        return usage()


if __name__ == '__main__':
    main()
