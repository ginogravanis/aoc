#!/usr/bin/env python

import sys as _sys


def _dragon(data: str) -> str:
    data_reversed = ''.join(reversed(data))
    suffix = data_reversed.replace('0', '.').replace('1', '0').replace('.', '1')
    return data + '0' + suffix


def _chksum(data: str) -> str:
    assert(len(data) % 2 == 0)
    chksum = ''.join(
        [
            '1' if data[2*i] == data[2*i+1] else '0'
            for i in range(len(data) // 2)
        ]
    )

    if len(chksum) % 2 == 0:
        return _chksum(chksum)
    else:
        return chksum


def solve(data: str, disk_size: int) -> str:
    while len(data) < disk_size:
        data = _dragon(data)
    return _chksum(data[:disk_size])


def usage():
    print(f"usage: {_sys.argv[0]} 1|2 SEED")


def main():
    if len(_sys.argv) != 3:
        return usage()

    part = _sys.argv[1]
    seed = _sys.argv[2]

    if part == '1':
        print(solve(seed, 272))
    elif part == '2':
        print(solve(seed, 35651584))
    else:
        return usage()


if __name__ == '__main__':
    main()
