#!/usr/bin/env python

import sys as _sys
import typing as _t


def _lines(first: str) -> _t.Generator[str, None, None]:
    line = first
    while True:
        yield line
        new_line = ['^' if line[1] == '^' else '.'] + [
            '^' if line[i-1] != line[i+1] else '.'
            for i in range(1, len(line) - 1)
        ] + ['^' if line[-2] == '^' else '.']
        line = ''.join(new_line)


def solve(filename: str, line_count: int) -> int:
    with open(filename) as file:
        seed = file.read().strip()

    traps = 0
    for i, line in enumerate(_lines(seed), start=1):
        traps += line.count('.')
        if i >= line_count:
            return traps


def usage():
    print(f"usage: {_sys.argv[0]} 1|2 FILE")


def main():
    if len(_sys.argv) != 3:
        return usage()

    part = _sys.argv[1]
    filename = _sys.argv[2]

    if part == '1':
        print(solve(filename, 40))
    elif part == '2':
        print(solve(filename, 400000))
    else:
        return usage()


if __name__ == '__main__':
    main()
