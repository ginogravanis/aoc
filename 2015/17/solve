#!/usr/bin/env python

import datetime as _dt
import itertools as _it
import sys as _sys


def solve1(filename: str) -> int:
    with open(filename) as file:
        containers = [int(line) for line in file]

    combinations = 0
    for container_count in range(1, len(containers)+1):
        for combo in _it.combinations(containers, container_count):
            if sum(combo) == 150:
               combinations += 1
    return combinations


def solve2(filename: str) -> int:
    with open(filename) as file:
        containers = [int(line) for line in file]

    combinations = 0
    for container_count in range(1, len(containers)+1):
        for combo in _it.combinations(containers, container_count):
            if sum(combo) == 150:
                combinations += 1

        if combinations:
            break
    return combinations


def usage():
    print(f"usage: {_sys.argv[0]} 1|2 FILE")


def main():
    if len(_sys.argv) != 3:
        usage()
        return

    part = _sys.argv[1]
    filename = _sys.argv[2]

    if part == '1':
        print(solve1(filename))
    elif part == '2':
        print(solve2(filename))
    else:
        usage()


if __name__ == '__main__':
    main()
