#!/usr/bin/env python

import functools as _ft
import sys as _sys
import typing as _t


def _load(filename: str) -> list[int]:
    with open(filename) as file:
        return [int(n) for n in file.read().strip().split(',')]


def _linear_fuel_cost(xs: list[int], target: int) -> int:
    return sum(abs(target - x) for x in xs)


@_ft.cache
def _triangular(n: int) -> int:
    return sum(range(n + 1))


def _triangular_fuel_cost(xs: list[int], target: int) -> int:
    return sum(_triangular(abs(target - x)) for x in xs)


def _min_fuel_cost(xs: list[int], fuel_cost: _t.Callable) -> int:
    return min(fuel_cost(xs, t) for t in range(max(xs) + 1))


def solve1(filename: str) -> int:
    xs = _load(filename)
    return _min_fuel_cost(xs, _linear_fuel_cost)


def solve2(filename: str) -> int:
    xs = _load(filename)
    return _min_fuel_cost(xs, _triangular_fuel_cost)

def usage():
    print(f"usage: {_sys.argv[0]} 1|2 FILE")


def main():
    if len(_sys.argv) != 3:
        return usage()

    part = _sys.argv[1]
    filename = _sys.argv[2]

    if part == '1':
        print(solve1(filename))
    elif part == '2':
        print(solve2(filename))
    else:
        return usage()


if __name__ == '__main__':
    main()
