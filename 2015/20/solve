#!/usr/bin/env python

import sys as _sys
import typing as _t


_houses = 10**6


def _find_exceeding(iterable: _t.Iterable[int], n: int) -> int:
    for i, x in enumerate(iterable, start=1):
        if x >= n:
            return i
    return None


def solve1(n: int) -> int:
    presents = [0] * _houses
    for elf in range(1, _houses+1):
        house = elf - 1
        while house < _houses:
            presents[house] += elf*10
            house += elf

    return _find_exceeding(presents, n)

def solve2(n: int) -> int:
    presents = [0] * _houses
    for elf in range(1, _houses+1):
        house = elf - 1
        deliveries = 0
        while house < _houses and deliveries < 50:
            presents[house] += elf*11
            house += elf
            deliveries += 1

    return _find_exceeding(presents, n)



def usage():
    print(f"usage: {_sys.argv[0]} 1|2 N")


def main():
    if len(_sys.argv) != 3:
        usage()
        return

    part = _sys.argv[1]
    n = int(_sys.argv[2])

    if part == '1':
        print(solve1(n))
    elif part == '2':
        print(solve2(n))
    else:
        usage()
        return


if __name__ == '__main__':
    main()
